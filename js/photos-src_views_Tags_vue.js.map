{"version":3,"file":"photos-src_views_Tags_vue.js?v=fe28cda4c970a2d349a8","mappingsrxQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACvCA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///photos/src/components/Tag.vue?vue&type=script&lang=js&","webpack:///photos/src/views/Tags.vue?vue&type=script&lang=js&","webpack:///photos/src/services/SystemTags.js","webpack:///photos/src/services/TaggedImages.js","webpack:///photos/src/views/Tags.vue?vue&type=style&index=0&id=730c32d3&lang=scss&scoped=true&","webpack://photos/./src/views/Tags.vue?9829","webpack:///photos/src/components/Tag.vue","webpack:///photos/src/views/Tags.vue","webpack://photos/./src/components/Tag.vue?86d1","webpack://photos/./src/views/Tags.vue?8481","webpack:///photos/src/components/Tag.vue?vue&type=template&id=bb7ceecc&","webpack:///photos/src/views/Tags.vue?vue&type=template&id=730c32d3&scoped=true&"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport getTaggedImages from '../services/TaggedImages';\nimport cancelableRequest from '../utils/CancelableRequest';\nimport FolderTagPreview from './FolderTagPreview';\nexport default {\n  name: 'Tag',\n  components: {\n    FolderTagPreview\n  },\n  inheritAttrs: false,\n  props: {\n    item: {\n      type: Object,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      cancelRequest: null\n    };\n  },\n\n  computed: { // global lists\n    ...mapGetters(['files', 'tags']),\n\n    // files list of the current folder\n    folderContent() {\n      return this.tags[this.item.injected.id].files;\n    },\n\n    fileList() {\n      return this.folderContent ? this.folderContent.map(id => this.files[id]).filter(file => !!file).slice(0, 4) // only get the 4 first images\n      : [];\n    }\n\n  },\n\n  beforeDestroy() {\n    // cancel any pending requests\n    if (this.cancelRequest) {\n      this.cancelRequest('Navigated away');\n    }\n  },\n\n  async created() {\n    // init cancellable request\n    const {\n      request,\n      cancel\n    } = cancelableRequest(getTaggedImages);\n    this.cancelRequest = cancel;\n\n    try {\n      // get data\n      const files = await request(this.item.injected.id);\n      this.$store.dispatch('updateTag', {\n        id: this.item.injected.id,\n        files\n      });\n      this.$store.dispatch('appendFiles', files);\n    } catch (error) {\n      if (error.response && error.response.status) {\n        console.error('Failed to get folder content', this.item.injected.id, error.response);\n      }\n    } finally {\n      this.cancelRequest = null;\n    }\n  }\n\n};","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport VirtualGrid from 'vue-virtual-grid';\nimport getSystemTags from '../services/SystemTags';\nimport getTaggedImages from '../services/TaggedImages';\nimport EmptyContent from '../components/EmptyContent';\nimport Tag from '../components/Tag';\nimport File from '../components/File';\nimport Navigation from '../components/Navigation';\nimport GridConfigMixin from '../mixins/GridConfig';\nimport cancelableRequest from '../utils/CancelableRequest';\nexport default {\n  name: 'Tags',\n  components: {\n    VirtualGrid,\n    EmptyContent,\n    Navigation\n  },\n  mixins: [GridConfigMixin],\n  props: {\n    rootTitle: {\n      type: String,\n      required: true\n    },\n    path: {\n      type: String,\n      default: ''\n    },\n    isRoot: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  data() {\n    return {\n      error: null,\n      cancelRequest: null,\n      loading: false\n    };\n  },\n\n  computed: { // global lists\n    ...mapGetters(['files', 'tags', 'tagsNames']),\n\n    // current tag id from current path\n    tagId() {\n      return this.$store.getters.tagId(this.path);\n    },\n\n    // current tag\n    tag() {\n      return this.tags[this.tagId];\n    },\n\n    tagsList() {\n      return Object.values(this.tagsNames).map(tagsId => this.tags[tagsId]);\n    },\n\n    // files list of the current tag\n    fileList() {\n      return this.tag && this.tag.files.map(id => this.files[id]).filter(file => !!file);\n    },\n\n    contentList() {\n      if (this.isRoot) {\n        return this.tagsList.flatMap(tag => {\n          return tag.id === '' ? [] : [{\n            id: `tag-${tag.id}`,\n            injected: { ...tag\n            },\n            width: 256,\n            height: 256,\n            columnSpan: 1,\n            renderComponent: Tag\n          }];\n        });\n      }\n\n      return this.fileList.map(file => {\n        return {\n          id: `file-${file.fileid}`,\n          injected: { ...file,\n            list: this.fileList\n          },\n          width: 256,\n          height: 256,\n          columnSpan: 1,\n          renderComponent: File\n        };\n      });\n    },\n\n    isEmpty() {\n      if (this.isRoot) {\n        return Object.keys(this.tagsNames).length === 0;\n      }\n\n      return this.fileList.length === 0;\n    }\n\n  },\n  watch: {\n    async path() {\n      // if we don't have the tag in the store yet,\n      // we need to fetch the list first\n      if (!this.tagId) {\n        await this.fetchRootContent();\n      } // if we're not in the root, we fetch the data\n\n\n      if (!this.isRoot) {\n        this.fetchContent();\n      }\n    }\n\n  },\n\n  beforeDestroy() {\n    // cancel any pending requests\n    if (this.cancelRequest) {\n      this.cancelRequest('Navigated away');\n    }\n  },\n\n  async beforeMount() {\n    // if we don't have the tag in the store yet,\n    // we need to fetch the list first\n    if (!this.tagId) {\n      await this.fetchRootContent();\n    } // if we're not in the root, we fetch the data\n\n\n    if (!this.isRoot) {\n      this.fetchContent();\n    }\n  },\n\n  methods: {\n    async fetchRootContent() {\n      // cancel any pending requests\n      if (this.cancelRequest) {\n        this.cancelRequest('Changed folder');\n      } // close any potential opened viewer\n\n\n      OCA.Viewer.close(); // if we don't already have some cached data let's show a loader\n\n      if (!this.tags[this.tagId]) {\n        this.loading = true;\n      }\n\n      this.error = null; // init cancellable request\n\n      const {\n        request,\n        cancel\n      } = cancelableRequest(getSystemTags);\n      this.cancelRequest = cancel;\n\n      try {\n        // fetch content\n        const tags = await request();\n        this.$store.dispatch('updateTags', tags);\n      } catch (error) {\n        console.error(error);\n        this.error = true;\n      } finally {\n        // done loading\n        this.loading = false;\n        this.cancelRequest = null;\n      }\n    },\n\n    async fetchContent() {\n      // cancel any pending requests\n      if (this.cancelRequest) {\n        this.cancelRequest();\n      } // close any potential opened viewer\n\n\n      OCA.Viewer.close(); // if we don't already have some cached data let's show a loader\n\n      if (!this.tags[this.tagId]) {\n        this.loading = true;\n      }\n\n      this.error = null; // init cancellable request\n\n      const {\n        request,\n        cancel\n      } = cancelableRequest(getTaggedImages);\n      this.cancelRequest = cancel;\n\n      try {\n        // get data\n        const files = await request(this.tagId);\n        this.$store.dispatch('updateTag', {\n          id: this.tagId,\n          files\n        });\n        this.$store.dispatch('appendFiles', files);\n      } catch (error) {\n        console.error(error);\n        this.error = true;\n      } finally {\n        // done loading\n        this.loading = false;\n        this.cancelRequest = null;\n      }\n    }\n\n  }\n};","/**\n * @copyright Copyright (c) 2019 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport client from './DavClient';\nimport { genFileInfo } from '../utils/fileUtils';\n/**\n * List system tags\n *\n * @param {string} path the path relative to the user root\n * @param {object} [options] optional options for axios\n * @return {Array} the file list\n */\n\nexport default async function (path) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const response = await client.getDirectoryContents('/systemtags/', Object.assign({}, {\n    data: `<?xml version=\"1.0\"?>\n\t\t\t<d:propfind  xmlns:d=\"DAV:\"\n\t\t\t\txmlns:oc=\"http://owncloud.org/ns\">\n\t\t\t\t<d:prop>\n\t\t\t\t\t<oc:id />\n\t\t\t\t\t<oc:display-name />\n\t\t\t\t\t<oc:user-visible />\n\t\t\t\t\t<oc:user-assignable />\n\t\t\t\t\t<oc:can-assign />\n\t\t\t\t</d:prop>\n\t\t\t</d:propfind>`,\n    details: true\n  }, options));\n  return response.data.map(data => genFileInfo(data));\n}","/**\n * @copyright Copyright (c) 2019 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { genFileInfo } from '../utils/fileUtils';\nimport { getCurrentUser } from '@nextcloud/auth';\nimport { props } from './DavRequest';\nimport allowedMimes from './AllowedMimes';\nimport client from './DavClient';\n/**\n * Get tagged files based on provided tag id\n *\n * @param {number} id the tag id to filter\n * @param {object} [options] optional options for axios\n * @return {Array} the file list\n */\n\nexport default async function (id) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  options = Object.assign({\n    method: 'REPORT',\n    data: `<?xml version=\"1.0\"?>\n\t\t\t<oc:filter-files\n\t\t\t\txmlns:d=\"DAV:\"\n\t\t\t\txmlns:oc=\"http://owncloud.org/ns\"\n\t\t\t\txmlns:nc=\"http://nextcloud.org/ns\"\n\t\t\t\txmlns:ocs=\"http://open-collaboration-services.org/ns\">\n\t\t\t\t<d:prop>\n\t\t\t\t\t${props}\n\t\t\t\t</d:prop>\n\t\t\t\t<oc:filter-rules>\n\t\t\t\t\t<oc:systemtag>${id}</oc:systemtag>\n\t\t\t\t</oc:filter-rules>\n\t\t\t</oc:filter-files>`,\n    details: true\n  }, options);\n  const prefixPath = `/files/${getCurrentUser().uid}`;\n  const response = await client.getDirectoryContents(prefixPath, options);\n  return response.data.map(data => genFileInfo(data)) // filter out unwanted mime because server REPORT service only support\n  // hardcoded props and mime is not one of them\n  // https://github.com/nextcloud/server/blob/5bf3d1bb384da56adbf205752be8f840aac3b0c5/apps/dav/lib/Connector/Sabre/FilesReportPlugin.php#L274\n  .filter(file => file.mime && allowedMimes.indexOf(file.mime) !== -1) // remove prefix path from full file path\n  .map(data => Object.assign({}, data, {\n    filename: data.filename.replace(prefixPath, '')\n  }));\n}","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@charset \\\"UTF-8\\\";\\n/**\\n * @copyright Copyright (c) 2019 John Molakvoæ <skjnldsv@protonmail.com>\\n *\\n * @author John Molakvoæ <skjnldsv@protonmail.com>\\n *\\n * @license AGPL-3.0-or-later\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU Affero General Public License as\\n * published by the Free Software Foundation, either version 3 of the\\n * License, or (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\\n * GNU Affero General Public License for more details.\\n *\\n * You should have received a copy of the GNU Affero General Public License\\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n *\\n */\\n@media (min-width: 0px) and (max-width: 400px) {\\n.grid-container[data-v-730c32d3] {\\n    padding: 0px 8px 256px 8px;\\n}\\n}\\n@media (min-width: 400px) and (max-width: 700px) {\\n.grid-container[data-v-730c32d3] {\\n    padding: 0px 8px 256px 8px;\\n}\\n}\\n@media (min-width: 700px) and (max-width: 1024px) {\\n.grid-container[data-v-730c32d3] {\\n    padding: 0px 44px 256px 44px;\\n}\\n}\\n@media (min-width: 1024px) and (max-width: 1280px) {\\n.grid-container[data-v-730c32d3] {\\n    padding: 0px 44px 256px 44px;\\n}\\n}\\n@media (min-width: 1280px) and (max-width: 1440px) {\\n.grid-container[data-v-730c32d3] {\\n    padding: 0px 66px 256px 66px;\\n}\\n}\\n@media (min-width: 1440px) and (max-width: 1600px) {\\n.grid-container[data-v-730c32d3] {\\n    padding: 0px 66px 256px 66px;\\n}\\n}\\n@media (min-width: 1600px) and (max-width: 2048px) {\\n.grid-container[data-v-730c32d3] {\\n    padding: 0px 66px 256px 66px;\\n}\\n}\\n@media (min-width: 2048px) and (max-width: 2560px) {\\n.grid-container[data-v-730c32d3] {\\n    padding: 0px 88px 256px 88px;\\n}\\n}\\n@media (min-width: 2560px) and (max-width: 3440px) {\\n.grid-container[data-v-730c32d3] {\\n    padding: 0px 88px 256px 88px;\\n}\\n}\\n@media (min-width: 3440px) {\\n.grid-container[data-v-730c32d3] {\\n    padding: 0px 88px 256px 88px;\\n}\\n}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-2[0].rules[0].use[3]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tags.vue?vue&type=style&index=0&id=730c32d3&lang=scss&scoped=true&\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-2[0].rules[0].use[3]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tags.vue?vue&type=style&index=0&id=730c32d3&lang=scss&scoped=true&\";\n       export default content && content.locals ? content.locals : undefined;\n","import { render, staticRenderFns } from \"./Tag.vue?vue&type=template&id=bb7ceecc&\"\nimport script from \"./Tag.vue?vue&type=script&lang=js&\"\nexport * from \"./Tag.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/louis/workspace/nextcloud/apps/photos/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('bb7ceecc')) {\n      api.createRecord('bb7ceecc', component.options)\n    } else {\n      api.reload('bb7ceecc', component.options)\n    }\n    module.hot.accept(\"./Tag.vue?vue&type=template&id=bb7ceecc&\", function () {\n      api.rerender('bb7ceecc', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/Tag.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./Tags.vue?vue&type=template&id=730c32d3&scoped=true&\"\nimport script from \"./Tags.vue?vue&type=script&lang=js&\"\nexport * from \"./Tags.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Tags.vue?vue&type=style&index=0&id=730c32d3&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"730c32d3\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/louis/workspace/nextcloud/apps/photos/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('730c32d3')) {\n      api.createRecord('730c32d3', component.options)\n    } else {\n      api.reload('730c32d3', component.options)\n    }\n    module.hot.accept(\"./Tags.vue?vue&type=template&id=730c32d3&scoped=true&\", function () {\n      api.rerender('730c32d3', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/views/Tags.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tag.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tag.vue?vue&type=script&lang=js&\"","import mod from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tags.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tags.vue?vue&type=script&lang=js&\"","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"FolderTagPreview\", {\n    attrs: {\n      id: _vm.item.injected.id,\n      icon: \"icon-tag\",\n      name: _vm.item.injected.displayName,\n      path: _vm.item.injected.displayName,\n      \"file-list\": _vm.fileList,\n    },\n  })\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.error\n    ? _c(\"EmptyContent\", [\n        _vm._v(\"\\n\\t\" + _vm._s(_vm.t(\"photos\", \"An error occurred\")) + \"\\n\"),\n      ])\n    : !_vm.loading\n    ? _c(\n        \"div\",\n        [\n          _c(\"Navigation\", {\n            key: \"navigation\",\n            attrs: {\n              basename: _vm.path,\n              filename: \"/\" + _vm.path,\n              \"root-title\": _vm.rootTitle,\n            },\n          }),\n          _vm._v(\" \"),\n          _vm.isEmpty\n            ? _c(\n                \"EmptyContent\",\n                {\n                  key: \"emptycontent\",\n                  attrs: { \"illustration-name\": \"empty\" },\n                  scopedSlots: _vm._u(\n                    [\n                      {\n                        key: \"desc\",\n                        fn: function () {\n                          return [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\" +\n                                _vm._s(\n                                  _vm.t(\n                                    \"photos\",\n                                    \"Photos with tags will show up here\"\n                                  )\n                                ) +\n                                \"\\n\\t\\t\"\n                            ),\n                          ]\n                        },\n                        proxy: true,\n                      },\n                    ],\n                    null,\n                    false,\n                    4132175345\n                  ),\n                },\n                [\n                  _vm._v(\n                    \"\\n\\t\\t\" + _vm._s(_vm.t(\"photos\", \"No tags yet\")) + \"\\n\\t\\t\"\n                  ),\n                ]\n              )\n            : _c(\n                \"div\",\n                { staticClass: \"grid-container\" },\n                [\n                  _c(\"VirtualGrid\", {\n                    ref: \"virtualgrid\",\n                    attrs: {\n                      items: _vm.contentList,\n                      \"get-column-count\": function () {\n                        return _vm.gridConfig.count\n                      },\n                      \"get-grid-gap\": function () {\n                        return _vm.gridConfig.gap\n                      },\n                    },\n                  }),\n                ],\n                1\n              ),\n        ],\n        1\n      )\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"names":[],"sourceRoot":""}
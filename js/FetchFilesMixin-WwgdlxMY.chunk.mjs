import{W as a,S as c,t as F}from"./vue.runtime.esm-K-L1yEsQ.chunk.mjs";import{f as r,p as d,Z as f,R as g,Y as u}from"./index-C1IyPqGx.chunk.mjs";import{g as p}from"./PhotoSearch-Czi3rK3e.chunk.mjs";import{A as m}from"./AbortControllerMixin-DeafVJKx.chunk.mjs";const y={name:"FetchFilesMixin",mixins:[m],data(){return{errorFetchingFiles:null,loadingFiles:!1,doneFetchingFiles:!1,fetchSemaphore:new u(1),fetchedFileIds:[]}},watch:{"$route.path"(){this.resetFetchFilesState()}},methods:{async fetchFiles(o={},h=[],l=!1){if(this.doneFetchingFiles&&!l||this.loadingFiles)return[];const n=await this.fetchSemaphore.acquire();try{this.errorFetchingFiles=null,this.loadingFiles=!0;const e=200,s=await p({firstResult:this.fetchedFileIds.length,nbResults:e,...o,signal:this.abortController.signal});s.length!==e&&(this.doneFetchingFiles=!0);const i=s.map(t=>t.fileid).filter(t=>!this.fetchedFileIds.includes(t.toString()));return this.fetchedFileIds.push(...i.map(t=>t.toString()).filter(t=>!h.includes(t))),this.$store.dispatch("appendFiles",s),r.debug(`[FetchFilesMixin] Fetched ${i.length} new files: `,{fileIds:i}),i}catch(e){if(e.response?.status===404){const s=d.state.userConfig.photosSourceFolders;for(const i of s)if(e.response?.data?.match(`File with name /${i} could not be located`)!==null){r.debug(`The ${i} folder does not exist, creating it.`);try{return await f.createDirectory(a(c,i)),this.resetFetchFilesState(),[]}catch(t){this.errorFetchingFiles=404,r.error("Fail to create source directory",{error:t})}}}else{if(e instanceof DOMException&&e.code===e.ABORT_ERR)return[];this.errorFetchingFiles=e}g(F("photos","Error fetching files")),r.error(e)}finally{this.loadingFiles=!1,this.fetchSemaphore.release(n)}return[]},resetFetchFilesState(){this.doneFetchingFiles=!1,this.errorFetchingFiles=null,this.loadingFiles=!1,this.fetchedFileIds=[]}}};export{y as F};
//# sourceMappingURL=FetchFilesMixin-WwgdlxMY.chunk.mjs.map

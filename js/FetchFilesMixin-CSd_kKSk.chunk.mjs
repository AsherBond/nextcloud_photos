import{d as c,X as F,S as d,t as o}from"./vue.runtime.esm-C8-0a0Ou.chunk.mjs";import{f as r,p as f,W as g,Q as u,Y as p}from"./index-Cqm0PfGL.chunk.mjs";import{g as m}from"./PhotoSearch-uZITS2Sf.chunk.mjs";import{A as S}from"./AbortControllerMixin-BOi4MTNa.chunk.mjs";const I=c({name:"FetchFilesMixin",mixins:[S],data(){return{errorFetchingFiles:null,loadingFiles:!1,doneFetchingFiles:!1,fetchSemaphore:new p(1),fetchedFileIds:[]}},watch:{"$route.path"(){this.resetFetchFilesState()}},methods:{async fetchFiles(h={},l=[],n=!1){if(this.doneFetchingFiles&&!n||this.loadingFiles)return[];const a=await this.fetchSemaphore.acquire();try{this.errorFetchingFiles=null,this.loadingFiles=!0;const e=200,s=await m({firstResult:this.fetchedFileIds.length,nbResults:e,...h,signal:this.abortController.signal});s.length!==e&&(this.doneFetchingFiles=!0);const t=s.map(i=>i.fileid).filter(i=>!this.fetchedFileIds.includes(i));return this.fetchedFileIds.push(...t.filter(i=>!l.includes(i))),this.$store.dispatch("appendFiles",s),r.debug(`[FetchFilesMixin] Fetched ${t.length} new files: `,{fileIds:t}),t}catch(e){if(e.response?.status===404){const s=f.state.userConfig.photosSourceFolders;for(const t of s)if(e.response?.data?.match(`File with name /${t} could not be located`)!==null){r.debug(`The ${t} folder does not exist, creating it.`);try{return await g.createDirectory(F(d,t)),this.resetFetchFilesState(),[]}catch(i){this.errorFetchingFiles=404,r.error("Fail to create source directory",{error:i})}}}else{if(e instanceof DOMException&&e.code===e.ABORT_ERR)return[];this.errorFetchingFiles=e}u(o("photos","Error fetching files")),r.error(o("photos","Error fetching files"),{error:e})}finally{this.loadingFiles=!1,this.fetchSemaphore.release(a)}return[]},resetFetchFilesState(){this.doneFetchingFiles=!1,this.errorFetchingFiles=null,this.loadingFiles=!1,this.fetchedFileIds=[]}}});export{I as F};
//# sourceMappingURL=FetchFilesMixin-CSd_kKSk.chunk.mjs.map

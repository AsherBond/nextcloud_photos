import{A as h,R as r,f as s,Y as C}from"./index-C-nSEKko.chunk.mjs";import"./vue.runtime.esm-CShV2ddg.chunk.mjs";import{A as F}from"./AbortControllerMixin-DeafVJKx.chunk.mjs";import{a as g,b as f}from"./collectionFetcher-CyPMU7pv.chunk.mjs";const y={name:"FetchCollectionContentMixin",data(){return{fetchSemaphore:new C(1),loadingCollection:!1,loadingCollectionFiles:!1,errorFetchingCollection:null,errorFetchingCollectionFiles:null}},mixins:[F],methods:{...h(["appendFiles","addCollections","setCollectionFiles"]),async fetchCollection(o,l,i){if(this.loadingCollection)return null;try{this.loadingCollection=!0,this.errorFetchingCollection=null;const e=await f(o,{signal:this.abortController.signal},l,i);return this.addCollections({collections:[e]}),e}catch(e){if(e.response?.status===404)return this.errorFetchingCollection=404,null;this.errorFetchingCollection=e,s.error("[PublicCollectionContent] Error fetching collection",{error:e}),r(this.t("photos","Failed to fetch collection."))}finally{this.loadingCollection=!1}return null},async fetchCollectionFiles(o,l,i,e=[]){if(this.loadingCollectionFiles)return[];const c=await this.fetchSemaphore.acquire();try{this.errorFetchingCollectionFiles=null,this.loadingCollectionFiles=!0;let t=await g(o,{signal:this.abortController.signal},l,i);const a=t.map(n=>n.fileid.toString());return e.forEach(n=>t=t.map(n)),this.appendFiles(t),t.length>0&&await this.$store.commit("setCollectionFiles",{collectionFileName:o,fileIds:a}),t}catch(t){if(t.response?.status===404)return this.errorFetchingCollectionFiles=404,[];this.errorFetchingCollectionFiles=t,r(this.t("photos","Failed to fetch collections list.")),s.error("[PublicCollectionContent] Error fetching collection files",{error:t})}finally{this.loadingCollectionFiles=!1,this.fetchSemaphore.release(c)}return[]}}};export{y as F};
//# sourceMappingURL=FetchCollectionContentMixin-BQBuyj10.chunk.mjs.map

import{Y as c,U as F}from"./vue.runtime.esm-CShV2ddg.chunk.mjs";import{f as o,p as d,Z as f,R as g,Y as u}from"./index-C-nSEKko.chunk.mjs";import"./index-BGGeUZyp.chunk.mjs";import{g as p}from"./PhotoSearch-CMraq11m.chunk.mjs";import{A as m}from"./AbortControllerMixin-DeafVJKx.chunk.mjs";const R={name:"FetchFilesMixin",mixins:[m],data(){return{errorFetchingFiles:null,loadingFiles:!1,doneFetchingFiles:!1,fetchSemaphore:new u(1),fetchedFileIds:[]}},watch:{"$route.path"(){this.resetFetchFilesState()}},methods:{async fetchFiles(n={},h=[],l=!1){if(this.doneFetchingFiles&&!l||this.loadingFiles)return[];const a=await this.fetchSemaphore.acquire();try{this.errorFetchingFiles=null,this.loadingFiles=!0;const e=200,r=await p({firstResult:this.fetchedFileIds.length,nbResults:e,...n,signal:this.abortController.signal});r.length!==e&&(this.doneFetchingFiles=!0);const s=r.map(i=>i.fileid).filter(i=>!this.fetchedFileIds.includes(i.toString()));return this.fetchedFileIds.push(...s.map(i=>i.toString()).filter(i=>!h.includes(i))),this.$store.dispatch("appendFiles",r),o.debug(`[FetchFilesMixin] Fetched ${s.length} new files: `,s),s}catch(e){if(e.response?.status===404){const r=d.state.userConfig.photosSourceFolders;for(const s of r)if(e.response?.data?.match(`File with name /${s} could not be located`)!==null){o.debug(`The ${s} folder does not exist, creating it.`);try{return await f.createDirectory(c(F,s)),this.resetFetchFilesState(),[]}catch(i){this.errorFetchingFiles=404,o.error("Fail to create source directory",{error:i})}}}else{if(e instanceof DOMException&&e.code===e.ABORT_ERR)return[];this.errorFetchingFiles=e}g(t("photos","Error fetching files")),o.error(e)}finally{this.loadingFiles=!1,this.fetchSemaphore.release(a)}return[]},resetFetchFilesState(){this.doneFetchingFiles=!1,this.errorFetchingFiles=null,this.loadingFiles=!1,this.fetchedFileIds=[]}}};export{R as F};
//# sourceMappingURL=FetchFilesMixin-BlXkBofu.chunk.mjs.map
